apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: agency-server
  labels:
    group: cryptoexchange
    app: agency-server
  annotations:
    eks.amazonaws.com/role-arn: {{ .Values.serviceAccount.roleArn }}
spec:
  selector:
    matchLabels:
      group: cryptoexchange
      app: agency-server
      instance: agency-server
  serviceName: agency-server
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      labels:
        group: cryptoexchange
        app: agency-server
        instance: agency-server
    spec:
      nodeSelector:
        {{ .Values.nodeSelectorKey }}: "{{ .Values.nodeSelectorValue }}"
      affinity:
    {{- if .Values.zone }}
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: topology.kubernetes.io/zone
                    operator: In
                    values:
                      - {{ .Values.zone }}
    {{- end }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - agency-server
                topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- if .Values.serviceAccount }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- end }}
      containers:
      - image: {{ .Values.dockerImageName }}
        readinessProbe:
          httpGet:
            port: 24870
            path: /monitor/health
          # Number of seconds after the container has started before liveness or readiness probes are initiated.
          # Defaults to 0 seconds. Minimum value is 0.
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}

          # How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
          periodSeconds: 5

          # Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1.
          timeoutSeconds: 30

          # Minimum consecutive successes for the probe to be considered successful after having failed.
          # Defaults to 1. Must be 1 for liveness. Minimum value is 1.
          successThreshold: 1

          # When a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.
          # Giving up means the Pod will be marked Unready.
          # Defaults to 3. Minimum value is 1.
          failureThreshold: 3
        livenessProbe:
          exec:
            command:
              - 'sh'
              - '-c'
              - 'curl localhost:24870/monitor'
          # Number of seconds after the container has started before liveness or readiness probes are initiated.
          # Defaults to 0 seconds. Minimum value is 0.
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}

          # How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
          periodSeconds: 5

          # Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1.
          timeoutSeconds: 30

          # Minimum consecutive successes for the probe to be considered successful after having failed.
          # Defaults to 1. Must be 1 for liveness. Minimum value is 1.
          successThreshold: 1

          # When a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.
          # Giving up means the Pod will be marked Unready.
          # Defaults to 3. Minimum value is 1.
          failureThreshold: 3
        env:
          - name: SPRING_PROFILES_ACTIVE
            value: {{ .Values.springProfilesActive }}
          - name: JAVA_TOOL_OPTIONS
            value: {{ .Values.javaToolOptions }}
          {{- if .Values.serviceAccount }}
          - name: AWS_STS_REGIONAL_ENDPOINTS
            value: {{ .Values.awsStsRegionalEndpoints }}
          {{- end }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        lifecycle:
          preStop:
            exec:
              command:
                - /app/config/prestop.sh
        name: agency-server
        ports:
          - containerPort: 24880 # App REST port number.
          - containerPort: 24870 # Monitoring port number.
          - containerPort: 24400 # communication SPI port number.
          - containerPort: 24100 # Aeron port
            protocol: UDP
          - containerPort: 24101
            protocol: UDP
          - containerPort: 24102
            protocol: UDP
          - containerPort: 24103
            protocol: UDP
          - containerPort: 24104
            protocol: UDP
          - containerPort: 24105
            protocol: UDP
          - containerPort: 24106
            protocol: UDP
          - containerPort: 24107
            protocol: UDP
          - containerPort: 24108
            protocol: UDP
          - containerPort: 24109
            protocol: UDP
          - containerPort: 24110
            protocol: UDP
          - containerPort: 24111
            protocol: UDP
          - containerPort: 24112
            protocol: UDP
          - containerPort: 24113
            protocol: UDP
          - containerPort: 24114
            protocol: UDP
          - containerPort: 24115
            protocol: UDP
          - containerPort: 24116
            protocol: UDP
          - containerPort: 24117
            protocol: UDP
          - containerPort: 24118
            protocol: UDP
          - containerPort: 24119
            protocol: UDP
          - containerPort: 15400
            protocol: UDP
          - containerPort: 15401
            protocol: UDP
          - containerPort: 15402
            protocol: UDP
          - containerPort: 15403
            protocol: UDP
          - containerPort: 15404
            protocol: UDP
          - containerPort: 15405
            protocol: UDP
          - containerPort: 15406
            protocol: UDP
          - containerPort: 15407
            protocol: UDP
          - containerPort: 15408
            protocol: UDP
          - containerPort: 15409
            protocol: UDP
          - containerPort: 24200
            protocol: UDP
          - containerPort: 24201
            protocol: UDP
          - containerPort: 24202
            protocol: UDP
          - containerPort: 24203
            protocol: UDP
          - containerPort: 24204
            protocol: UDP
          - containerPort: 24205
            protocol: UDP
          - containerPort: 24206
            protocol: UDP
          - containerPort: 24207
            protocol: UDP
          - containerPort: 24208
            protocol: UDP
          - containerPort: 24209
            protocol: UDP
        volumeMounts:
          - mountPath: /app/config
            name: config-volume
          {{- if .Values.efs }}
          - mountPath: {{ .Values.efs.path }}
            name: efs-storage
          {{- end }}
          - mountPath: /dev/shm
            name: dshm
        resources:
          requests:
            {{- if ne .Values.memory.request "0" }}
            memory: {{ .Values.memory.request }}
            {{- end }}
            {{- if ne .Values.cpu.request "0" }}
            cpu: {{ .Values.cpu.request }}
            {{- end }}
          limits:
            {{- if ne .Values.memory.limit "0" }}
            memory: {{ .Values.memory.limit }}
            {{- end }}
            {{- if ne .Values.cpu.limit "0" }}
            cpu: {{ .Values.cpu.limit }}
            {{- end }}
      imagePullSecrets:
        - name: regcred
      volumes:
        - name: config-volume
          configMap:
            name: agency-server
            defaultMode: 0777
        {{- if .Values.efs }}
        - name: efs-storage
          persistentVolumeClaim:
            claimName: {{ .Values.efs.name }}
        {{- end }}
        - name: dshm
          emptyDir:
            medium: Memory


